# Code generated by git.repo.services.lenvendo.ru/grade-factor/go-kit-service-generator REMOVE THIS STRING ON EDIT OR DO NOT EDIT.
openapi: 3.0.0
info:
  title: echo
  version: '0.3.1'
servers:
  - url: http://echo.kube.dev.gradefactor.ru/ #ToDo service address
    description: Optional server description, e.g. Main (Dev) server
  - url: https://echo.kube.dev.gradefactor.ru/ #ToDo service address
    description: Optional server description, e.g. Main (Prod) server

paths:
  '/echo':
    get:
      tags:
        - EchoService
      summary: returns buid time, last commit and version app
      operationId: EchoService.GetEcho
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEchoListResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/liveness':
    get:
      tags:
        - HealthService
      summary: returns a error if service doesn`t live. The kubelet uses liveness probes to know when to restart a Container.
      operationId: HealthService.Liveness
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LivenessResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/readiness':
    get:
      tags:
        - HealthService
      summary: returns a error if service doesn`t ready. Service doesn`t ready by default. The kubelet uses readiness probes to know when a Container is ready to start accepting traffic.
      operationId: HealthService.Readiness
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadinessResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/version':
    get:
      tags:
        - HealthService
      summary: returns buid time, last commit and version app
      operationId: HealthService.Version
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
    Echo:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        reminder:
          type: string
    GetEchoListRequest:
      type: object
    GetEchoListResponse:
      type: object
      properties:
        echos:
          type: array
          items:
            $ref: '#/components/schemas/Echo'
        err:
          type: string
    LivenessRequest:
      type: object
    LivenessResponse:
      type: object
    ReadinessRequest:
      type: object
    ReadinessResponse:
      type: object
    VersionRequest:
      type: object
    VersionResponse:
      type: object
      properties:
        buildTime:
          type: string
        commit:
          type: string
        version:
          type: string